{"mappings":"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","sources":["src/fixer.js"],"sourcesContent":["let EXIF = require(\"exif-js\")\r\n\r\nconst getURLBase64 = function(url) {\r\n    return new Promise((resolve, reject) => {\r\n        let xhr = new XMLHttpRequest()\r\n        xhr.open('get', url, true)\r\n        xhr.responseType = 'blob'\r\n        xhr.onload = function() {\r\n            if (this.status === 200) {\r\n                let blob = this.response\r\n                let fileReader = new FileReader()\r\n                fileReader.onloadend = function(e) {\r\n                    let result = e.target.result\r\n                    resolve(result)\r\n                }\r\n                fileReader.readAsDataURL(blob)\r\n            }\r\n        }\r\n        xhr.onerror = function(err) {\r\n            reject(err)\r\n        }\r\n        xhr.send()\r\n    })\r\n}\r\n\r\nconst getOri = function(file) {\r\n    return new Promise(resolve => {\r\n        EXIF.getData(file, function() {\r\n            let orientation = EXIF.getTag(this, \"Orientation\");\r\n            resolve(orientation)\r\n        });\r\n    })\r\n}\r\n\r\nconst imgToCanvas = function(img, orientation) {\r\n    const canvas = document.createElement('canvas'),\r\n        ctx = canvas.getContext('2d'),\r\n        targetWidth = img.targetWidth || img.width,\r\n        targetHeight = img.targetHeight || img.height;\r\n    \r\n    if (orientation === 6) {\r\n        canvas.width = targetHeight;\r\n        canvas.height = targetWidth;\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(Math.PI / 180 * 90);\r\n        ctx.drawImage(img, -targetWidth / 2, -targetHeight / 2, canvas.height, canvas.width);\r\n    } else {\r\n        canvas.width = targetWidth;\r\n        canvas.height = targetHeight;\r\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n        resolve(canvas)\r\n    })\r\n}\r\n\r\nexport const fixBySelector = function(selector) {\r\n    const fixImg = function(img) {\r\n        if (!img.dataset.iosfixed) {\r\n            getOri(img).then(orientation => {\r\n                if (orientation == 6) {\r\n                    imgToCanvas(img, orientation).then(canvas => {\r\n                        try{\r\n                            img.src = canvas.toDataURL();\r\n                            img.dataset.iosfixed = true;\r\n                        }catch(e) {\r\n                            getURLBase64(img.src).then(base64 => {\r\n                                img.onload = function() {\r\n                                    if (!img.dataset.iosfixed) {\r\n                                        imgToCanvas(img, orientation).then(canvas => {\r\n                                            img.src = canvas.toDataURL();\r\n                                            img.dataset.iosfixed = true\r\n                                        })\r\n                                    }\r\n                                }\r\n                                img.src = base64;\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    let imgs = document.querySelectorAll(selector)\r\n    if (imgs.length) {\r\n        for (let i = 0; i < imgs.length; i++) {\r\n            let img = imgs[i]\r\n            if (img.tagName.toLowerCase() === 'img') {\r\n                img.crossOrigin = \"Anonymous\";\r\n                if (img.complete) {\r\n                    fixImg(img)\r\n                } else {\r\n                    img.onload = function() {\r\n                        fixImg(img)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    } else {\r\n        console.log('fixer WARN no files:' + selector)\r\n    }\r\n}\r\n\r\nconst computeSize = function(originWidth, originHeight, maxWidth, maxHeight) {\r\n    let targetWidth = originWidth,\r\n        targetHeight = originHeight;\r\n    const setWidth = function() {\r\n            targetWidth = maxWidth;\r\n            targetHeight = Math.round(maxWidth * (originHeight / originWidth));\r\n        },\r\n        setHeight = function() {\r\n            targetHeight = maxHeight;\r\n            targetWidth = Math.round(maxHeight * (originWidth / originHeight));\r\n        }\r\n\r\n    if (maxWidth && maxHeight) {\r\n        //限定区间\r\n        if (originWidth > maxWidth || originHeight > maxHeight) {\r\n            if (originWidth / originHeight > maxWidth / maxHeight) {\r\n                // 更宽\r\n                setWidth()\r\n            } else {\r\n                // 更高\r\n                setHeight()\r\n            }\r\n        }\r\n    } else if (maxWidth) {\r\n        //限定宽度\r\n        setWidth()\r\n    } else if (maxHeight) {\r\n        //限定高度\r\n        setHeight()\r\n    }\r\n\r\n    return {\r\n        width: targetWidth,\r\n        height: targetHeight\r\n    }\r\n}\r\n\r\nexport const fixImgFile = function(file, option) {\r\n    const opt = Object.assign({\r\n        ratio: 2,        // 大于1使用默认值\r\n        outType: 'base64'           // base64 | blob\r\n    }, option || {})\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (file.type.indexOf('image/') === 0) {\r\n            getOri(file).then(orientation => {\r\n                let oReader = new FileReader();\r\n                oReader.onload = function(e) {\r\n                    let base64 = e.target.result;\r\n                    let img = document.createElement('img');\r\n\r\n                    img.onload = function() {\r\n                        if (opt.width || opt.height) {\r\n                            let compressSize;\r\n                            if (orientation === 6) {\r\n                                compressSize = computeSize(img.height, img.width, opt.width, opt.height)\r\n                                img.targetWidth = compressSize.height;\r\n                                img.targetHeight = compressSize.width;\r\n                            } else {\r\n                                compressSize = computeSize(img.width, img.height, opt.width, opt.height)\r\n                                img.targetWidth = compressSize.width;\r\n                                img.targetHeight = compressSize.height;\r\n                            }\r\n\r\n                        }\r\n                        imgToCanvas(img, orientation).then(canvas => {\r\n                            if(opt.outType==='blob'){\r\n                                canvas.toBlob(resolve, 'image/jpeg', opt.ratio)\r\n                            }else{\r\n                                resolve(canvas.toDataURL('image/jpeg', opt.ratio))\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                    img.src = base64;\r\n                }\r\n                oReader.readAsDataURL(file);\r\n            }).catch(err => {\r\n                reject(err)\r\n            })\r\n        }else{\r\n            reject('非图片文件不支持压缩')\r\n        }\r\n    })\r\n\r\n}"],"names":[],"version":3,"file":"module.js.map"}