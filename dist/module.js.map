{"mappings":"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","sources":["src/fixer.js"],"sourcesContent":["import exifr from 'exifr';\n\nconst getURLBase64 = function(url) {\n    return new Promise((resolve, reject) => {\n        let xhr = new XMLHttpRequest()\n        xhr.open('get', url, true)\n        xhr.responseType = 'blob'\n        xhr.onload = function() {\n            if (this.status === 200) {\n                let blob = this.response\n                let fileReader = new FileReader()\n                fileReader.onloadend = function(e) {\n                    let result = e.target.result\n                    resolve(result)\n                }\n                fileReader.readAsDataURL(blob)\n            }\n        }\n        xhr.onerror = function(err) {\n            reject(err)\n        }\n        xhr.send()\n    })\n}\n\nconst getOri = function(file) {\n    return new Promise(resolve => {\n        exifr.parse(file).then((e) => {\n            resolve(e?.Orientation)\n        })\n    })\n}\n\nconst imgToCanvas = function(img, orientation) {\n    const canvas = document.createElement('canvas'),\n        ctx = canvas.getContext('2d'),\n        targetWidth = img.targetWidth || img.width,\n        targetHeight = img.targetHeight || img.height;\n    \n    if (orientation === 6) {\n        canvas.width = targetHeight;\n        canvas.height = targetWidth;\n        ctx.translate(canvas.width / 2, canvas.height / 2);\n        ctx.rotate(Math.PI / 180 * 90);\n        ctx.drawImage(img, -targetWidth / 2, -targetHeight / 2, canvas.height, canvas.width);\n    } else {\n        canvas.width = targetWidth;\n        canvas.height = targetHeight;\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n    }\n\n    return new Promise(resolve => {\n        resolve(canvas)\n    })\n}\n\nexport const fixBySelector = function(selector) {\n    const fixImg = function(img) {\n        if (!img.dataset.iosfixed) {\n            getOri(img).then(orientation => {\n                if (orientation == 6) {\n                    imgToCanvas(img, orientation).then(canvas => {\n                        try{\n                            img.src = canvas.toDataURL();\n                            img.dataset.iosfixed = true;\n                        }catch(e) {\n                            getURLBase64(img.src).then(base64 => {\n                                img.onload = function() {\n                                    if (!img.dataset.iosfixed) {\n                                        imgToCanvas(img, orientation).then(canvas => {\n                                            img.src = canvas.toDataURL();\n                                            img.dataset.iosfixed = true\n                                        })\n                                    }\n                                }\n                                img.src = base64;\n                            })\n                        }\n                    })\n                }\n            })\n        }\n    }\n    let imgs = document.querySelectorAll(selector)\n    if (imgs.length) {\n        for (let i = 0; i < imgs.length; i++) {\n            let img = imgs[i]\n            if (img.tagName.toLowerCase() === 'img') {\n                img.crossOrigin = \"Anonymous\";\n                if (img.complete) {\n                    fixImg(img)\n                } else {\n                    img.onload = function() {\n                        fixImg(img)\n                    }\n                }\n            }\n        }\n\n    } else {\n        console.log('fixer WARN no files:' + selector)\n    }\n}\n\nconst computeSize = function(originWidth, originHeight, maxWidth, maxHeight) {\n    let targetWidth = originWidth,\n        targetHeight = originHeight;\n    const setWidth = function() {\n            targetWidth = maxWidth;\n            targetHeight = Math.round(maxWidth * (originHeight / originWidth));\n        },\n        setHeight = function() {\n            targetHeight = maxHeight;\n            targetWidth = Math.round(maxHeight * (originWidth / originHeight));\n        }\n\n    if (maxWidth && maxHeight) {\n        //限定区间\n        if (originWidth > maxWidth || originHeight > maxHeight) {\n            if (originWidth / originHeight > maxWidth / maxHeight) {\n                // 更宽\n                setWidth()\n            } else {\n                // 更高\n                setHeight()\n            }\n        }\n    } else if (maxWidth) {\n        //限定宽度\n        setWidth()\n    } else if (maxHeight) {\n        //限定高度\n        setHeight()\n    }\n\n    return {\n        width: targetWidth,\n        height: targetHeight\n    }\n}\n\nexport const fixImgFile = function(file, option) {\n    const opt = Object.assign({\n        maxWidth: null,\n        maxHeight: null,\n        ratio: 2,        // 大于1使用默认值\n        outType: 'base64'           // base64 | blob\n    }, option || {})\n\n    return new Promise((resolve, reject) => {\n        if (file.type.indexOf('image/') === 0) {\n            getOri(file).then(orientation => {\n                let oReader = new FileReader();\n                oReader.onload = function(e) {\n                    let base64 = e.target.result;\n                    let img = document.createElement('img');\n\n                    img.onload = function() {\n                        if (opt.maxWidth || opt.maxHeight) {\n                            let compressSize;\n                            if (orientation === 6) {\n                                compressSize = computeSize(img.height, img.width, opt.maxWidth, opt.maxHeight)\n                                img.targetWidth = compressSize.height;\n                                img.targetHeight = compressSize.width;\n                            } else {\n                                compressSize = computeSize(img.width, img.height, opt.maxWidth, opt.maxHeight)\n                                img.targetWidth = compressSize.width;\n                                img.targetHeight = compressSize.height;\n                            }\n\n                        }\n                        imgToCanvas(img, orientation).then(canvas => {\n                            if(opt.outType==='blob'){\n                                canvas.toBlob(resolve, 'image/jpeg', opt.ratio)\n                            }else{\n                                resolve(canvas.toDataURL('image/jpeg', opt.ratio))\n                            }\n                            \n                        })\n                    }\n                    img.src = base64;\n                }\n                oReader.readAsDataURL(file);\n            }).catch(err => {\n                reject(err)\n            })\n        }else{\n            reject('非图片文件不支持压缩')\n        }\n    })\n\n}"],"names":[],"version":3,"file":"module.js.map"}